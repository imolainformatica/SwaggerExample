{
  "swagger": "2.0",
  "info": {
    "description": "This is a example for POC",
    "version": "1.0.0",
    "title": "Worker Events",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "gmorlini@imolinfo.it"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8989",
  "basePath": "/events/hr/v1",
  "tags": [{
    "name": "worker",
    "description": "Everything about your Worker",
    "externalDocs": {
      "description": "Find out more",
      "url": "http://swagger.io"
    }
  }],
  "schemes": [
    "http"
  ],
  "paths": {
    "/worker.personal-address.change/{event-id}": {
      "get": {
        "tags": [
          "worker"
        ],
        "summary": "Change on personal address of worker",
        "description": "Returns an event instance",
        "operationId": "WorkerPersonalAddressChange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
          "name": "event-id",
          "in": "path",
          "description": "Event ID",
          "required": true,
          "example": "123"
        },{
            "name": "associateoid",
            "description": "Associate OID of the requestor",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "G4O73G9Z62SL2NFM"
          },
          {
            "name": "orgoid",
            "description": "Organization OID of the requestor",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "SOR",
            "description": "SOR where the call is routed to",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "SORContext",
            "description": "Context within an SOR that the call should be routed to",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "SORUri",
            "description": "Uri within the SOR",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "realm",
            "description": "The identity Management Realm. E.g. ISI",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "ISI"
          },
          {
            "name": "roleCode",
            "description": "The role the user is playing during the transaction. Possible values: employee,manager,practitioner,administrator,supervisor. The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner.I",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "employee",
              "manager",
              "practitioner",
              "administrator",
              "supervisor"
            ]
          },
          {
            "name": "sm_serversessionid",
            "description": "SiteMinder session ID",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages.",
            "in": "header",
            "required": false,
            "type": "string",
            "example": "en-US"
          },
          {
            "name": "CONSUMEROOID",
            "description": "Contains the object identifier of the organization to which the consumer application belongs. Conditions  Required/applicable security standard uses this header. Internal to ADP",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "CONSUMERAOID",
            "description": "Contains the object identifier of the application that is consuming the Web API. Conditions  Required/applicable security standard uses this header.  Internal to ADP",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "ConsumerAppOID",
            "description": "Identifier for the service consumer application. This header is required, if Actor (Service Consumer) is an application or Internal to ADP. ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "ADP-Act-As-OrgOID",
            "description": "Org OID for Organization of the Associate that the Actor is Acting As",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "ADP-Act-As-AssociateOID",
            "description": "Associate OID for the Associate that the Actor is Acting As",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "ADP-On-Behalf-Of-OrgOID",
            "description": "Org OID for Organization of the Associate that the Actor is acting On Behalf Of",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "ADP-On-Behalf-Of-AssociateOID",
            "description": "Associate OID for the Associate that the Actor is acting On Behalf Of",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "ADP-Acting-SessionID",
            "description": "Session ID for the acting session, Act-As and act On-Behalf-Off",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "originatingEventID",
            "in": "query",
            "description": "Returns event instances which were initiated by the same originating event id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "relatedEventID",
            "in": "query",
            "description": "Returns event instances which were related to the event id.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Defines the entity tag for use with the If-Match and If-None-Match request headers."
              },
              "Cache-Control": {
                "type": "string",
                "description": "Specifies directives that must be obeyed by all caching mechanisms along the request/response chain."
              },
              "Content-Language": {
                "type": "string",
                "description": "Specifies the languages for which the entity-body is intended."
              },
              "Content-Type": {
                "type": "string",
                "description": "type or subtype. Describes the media type and subtype of an entity-body."
              },
              "ADP-Acting-SessionID": {
                "type": "string",
                "description": "Session ID for the acting session, Act-As and act On-Behalf-Off"
              },
              "ADP-Acting-Session-Expires": {
                "type": "string",
                "description": "Specifies the date and time the representational state of the resource is considered stale. Session ID for the acting session, Act-As and act On-Behalf-Off"
              }
            },
            "schema": {
                "$ref": "#/definitions/WorkerPersonalAddressChangeEvent"
            }
          },
          "204": {
            "description": "No Content"
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ConfirmMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ConfirmMessage"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ConfirmMessage"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ConfirmMessage"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/ConfirmMessage"
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/ConfirmMessage"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ConfirmMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "WorkerPersonalAddressChangeEvent": {
      "type": "object",
      "description": "An instance to capture an event when a worker personal address changed",
      "properties": {
        "events": {
          "id": "events",
          "type": "array",
          "items": {
            "description": "An instance to capture an event when a worker personal address changed",
            "id": "events",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "eventID": {
                "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
                "type": "string"
              },
              "serviceCategoryCode": {
                "description": "The service domain, e.g. HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "codeValue": {
                    "description": "The code for the related entity",
                    "type": "string"
                  },
                  "shortName": {
                    "description": "Short description of the related code",
                    "type": "string"
                  },
                  "longName": {
                    "description": "Long description of the related code",
                    "type": "string"
                  }
                }
              },
              "eventNameCode": {
                "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "codeValue": {
                    "description": "The code for the related entity",
                    "type": "string"
                  },
                  "shortName": {
                    "description": "Short description of the related code",
                    "type": "string"
                  },
                  "longName": {
                    "description": "Long description of the related code",
                    "type": "string"
                  }
                }
              },
              "eventTitle": {
                "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
                "type": "string"
              },
              "eventSubTitle": {
                "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
                "type": "string"
              },
              "eventReasonCode": {
                "description": "This allows for further refinement of the associated event. For example, for a worker.maritalStatus.change event, the reason code could be used to describe whether it is a Marriage or Divorce. This is optional and valued as defined by the system of record",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "codeValue": {
                    "description": "The code for the related entity",
                    "type": "string"
                  },
                  "shortName": {
                    "description": "Short description of the related code",
                    "type": "string"
                  },
                  "longName": {
                    "description": "Long description of the related code",
                    "type": "string"
                  }
                }
              },
              "eventStatusCode": {
                "description": "This identifies the status of the event. An event that has been initiated by the system of record will have an event status code of created. An event that is saved in a work in progress state will have an event status code of inProgress. An event that has been recorded will have an event status code of complete. These values are set by the system of record and valued based on a standard codeslist",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "codeValue": {
                    "description": "The code for the related entity",
                    "type": "string"
                  },
                  "shortName": {
                    "description": "Short description of the related code",
                    "type": "string"
                  },
                  "longName": {
                    "description": "Long description of the related code",
                    "type": "string"
                  }
                }
              },
              "priorityCode": {
                "description": "This allows the system of record to prioritize events and is valued based on a standard codelist",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "codeValue": {
                    "description": "The code for the related entity",
                    "type": "string"
                  },
                  "shortName": {
                    "description": "Short description of the related code",
                    "type": "string"
                  },
                  "longName": {
                    "description": "Long description of the related code",
                    "type": "string"
                  }
                }
              },
              "recordDateTime": {
                "description": "This is the date time the event is recorded in the system of record with an event status code equal to complete. This value is set by the system of record",
                "type": "string",
                "format": "date-time"
              },
              "creationDateTime": {
                "description": "This is the date time the event is created. If a system of record creates the event instance, as in the case of an annual enrollment for example, then is sets the creation date time. If a user declares an event, then this is set to the date time when the first call is made to the system of record",
                "type": "string",
                "format": "date-time"
              },
              "effectiveDateTime": {
                "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time",
                "type": "string",
                "format": "date-time"
              },
              "expirationDateTime": {
                "description": "This value is set by the system of record and used to term the life cycle of an event instance. ",
                "type": "string",
                "format": "date-time"
              },
              "dueDateTime": {
                "description": "This value is set by the system of record and allows for the presentation of a date by which the system of record would like the user to complete the event",
                "type": "string",
                "format": "date-time"
              },
              "notificationIndicator": {
                "description": "Are we sending update emails as the advance is processed?",
                "type": "boolean"
              },
              "originator": {
                "description": "An originator is a user, machine or event that triggered the event",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "applicationID": {
                    "description": "The unique identifier of the application which originated the event or a process",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "idValue": {
                        "description": "An actual ID value",
                        "type": "string"
                      },
                      "schemeCode": {
                        "description": "The scheme code",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "codeValue": {
                            "description": "The code for the related entity",
                            "type": "string"
                          },
                          "shortName": {
                            "description": "Short description of the related code",
                            "type": "string"
                          },
                          "longName": {
                            "description": "Long description of the related code",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "associateOID": {
                    "description": "The unique identifier of an associate who originated the event.",
                    "type": "string"
                  },
                  "personOID": {
                    "description": "The unique identifier of a person who originated the event or a process",
                    "type": "string"
                  },
                  "formattedName": {
                    "description": "Human readable name of the event originator",
                    "type": "string"
                  },
                  "eventID": {
                    "description": "The unique identifier of the event instance. This is generated once an event is recorded with an event status code equal to Complete. This value is set by the system of record.",
                    "type": "string"
                  },
                  "eventNameCode": {
                    "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "codeValue": {
                        "description": "The code for the related entity",
                        "type": "string"
                      },
                      "shortName": {
                        "description": "Short description of the related code",
                        "type": "string"
                      },
                      "longName": {
                        "description": "Long description of the related code",
                        "type": "string"
                      }
                    }
                  },
                  "deviceID": {
                    "description": "The unique identifier of the device, e.g. a time clock, door entry beam",
                    "type": "string"
                  }
                }
              },
              "actor": {
                "description": "The actor is the party that completed the recording of the event",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "applicationID": {
                    "description": "The unique identifier of the application which originated the event.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "idValue": {
                        "description": "An actual ID value",
                        "type": "string"
                      },
                      "schemeCode": {
                        "description": "The scheme code",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "codeValue": {
                            "description": "The code for the related entity",
                            "type": "string"
                          },
                          "shortName": {
                            "description": "Short description of the related code",
                            "type": "string"
                          },
                          "longName": {
                            "description": "Long description of the related code",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "associateOID": {
                    "description": "The unique identifier of an associate who originated the event or a process",
                    "type": "string"
                  },
                  "personOID": {
                    "description": "The unique identifier of a person who originated the event or a process",
                    "type": "string"
                  },
                  "formattedName": {
                    "description": "Human readable name of the actor",
                    "type": "string"
                  },
                  "deviceID": {
                    "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
                    "type": "string"
                  },
                  "geoCoordinate": {
                    "description": "The coordinates of the location of the actor",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latitude": {
                        "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
                        "type": "number"
                      },
                      "longitude": {
                        "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
                        "type": "number"
                      }
                    }
                  },
                  "deviceUserAgentID": {
                    "description": "Identifier of the user agent of the device used by the actor who worked on the event or process",
                    "type": "string"
                  }
                }
              },
              "actAsParty": {
                "description": "The party (client employee) information that the actor is acting as to complete the recording of the event. Example:  An ADP Support User (principal A = Actor) views data within an ADP Application as a client employee (principal B) in read only mode.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "applicationID": {
                    "description": "The unique identifier of the application which originated the event.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "idValue": {
                        "description": "An actual ID value",
                        "type": "string"
                      },
                      "schemeCode": {
                        "description": "The scheme code",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "codeValue": {
                            "description": "The code for the related entity",
                            "type": "string"
                          },
                          "shortName": {
                            "description": "Short description of the related code",
                            "type": "string"
                          },
                          "longName": {
                            "description": "Long description of the related code",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "associateOID": {
                    "description": "The unique identifier of an associate who originated the event or a process",
                    "type": "string"
                  },
                  "personOID": {
                    "description": "The unique identifier of a person who originated the event or a process",
                    "type": "string"
                  },
                  "formattedName": {
                    "description": "Human readable name of the actor",
                    "type": "string"
                  },
                  "deviceID": {
                    "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
                    "type": "string"
                  },
                  "geoCoordinate": {
                    "description": "The coordinates of the location of the actor",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latitude": {
                        "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
                        "type": "number"
                      },
                      "longitude": {
                        "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
                        "type": "number"
                      }
                    }
                  },
                  "deviceUserAgentID": {
                    "description": "Identifier of the user agent of the device used by the actor who worked on the event or process",
                    "type": "string"
                  },
                  "organizationOID": {
                    "description": "A unique identifier of a client employee's organization id",
                    "type": "string"
                  }
                }
              },
              "onBehalfOfParty": {
                "description": "The party (client employee) that the actor is acting on behalf of to complete the recording of the event. Example:  An ADP Support User (principal A = Actor) views data within an ADP Application as a client employee (principal B) and can take action on that person's behalf.  The Actor may have access to certain features or screens that the Client Employee cannot view, e.g. diagnostics screens.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "applicationID": {
                    "description": "The unique identifier of the application which originated the event.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "idValue": {
                        "description": "An actual ID value",
                        "type": "string"
                      },
                      "schemeCode": {
                        "description": "The scheme code",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "codeValue": {
                            "description": "The code for the related entity",
                            "type": "string"
                          },
                          "shortName": {
                            "description": "Short description of the related code",
                            "type": "string"
                          },
                          "longName": {
                            "description": "Long description of the related code",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "associateOID": {
                    "description": "The unique identifier of an associate who originated the event or a process",
                    "type": "string"
                  },
                  "personOID": {
                    "description": "The unique identifier of a person who originated the event or a process",
                    "type": "string"
                  },
                  "formattedName": {
                    "description": "Human readable name of the actor",
                    "type": "string"
                  },
                  "deviceID": {
                    "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
                    "type": "string"
                  },
                  "geoCoordinate": {
                    "description": "The coordinates of the location of the actor",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latitude": {
                        "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
                        "type": "number"
                      },
                      "longitude": {
                        "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
                        "type": "number"
                      }
                    }
                  },
                  "deviceUserAgentID": {
                    "description": "Identifier of the user agent of the device used by the actor who worked on the event or process",
                    "type": "string"
                  },
                  "organizationOID": {
                    "description": "A unique identifier of a client employee's organization id",
                    "type": "string"
                  }
                }
              },
              "links": {
                "type": "array",
                "items": {
                  "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "href": {
                      "description": "The URI of the related entity",
                      "type": "string",
                      "format": "uri"
                    },
                    "rel": {
                      "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                      "type": "string",
                      "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                    },
                    "title": {
                      "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                      "type": "string"
                    },
                    "targetSchema": {
                      "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                      "type": "string"
                    },
                    "mediaType": {
                      "description": "The media type that the linked resource will return (Response)",
                      "type": "string",
                      "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                    },
                    "method": {
                      "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                      "type": "string",
                      "enum": ["GET", "POST", "DELETE", "PUT"]
                    },
                    "encType": {
                      "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                      "type": "string",
                      "enum": ["application/json", "application/x-www-form-urlencoded"]
                    },
                    "schema": {
                      "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                      "type": "string"
                    },
                    "payLoadArguments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "argumentPath": {
                            "description": "Code value (typically a key field) of the code list item",
                            "type": "string"
                          },
                          "argumentValue": {
                            "description": "Code value (typically a key field) of the code list item",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "data": {
                "description": "Event Data",
                "id": "event.data",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "eventContext": {
                    "description": "Data which sets the context for the event.  That is, the keys which set context",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "contextExpressionID": {
                        "description": "A globally unique (GUID) identifier of the context expression. This conveys the context of the associated data. For example, if the context is set to Germany, the data would adhere to the business rules and formatting rules relevant to Germany",
                        "type": "string"
                      },
                      "worker": {
                        "type": "object",
                        "title": "WorkerEventContext",
                        "additionalProperties": false,
                        "properties": {
                          "associateOID": {
                            "description": "A unique identifier of a covered individual when there is an AOID",
                            "type": "string"
                          },
                          "person": {
                            "description": "An associate is a person with a relationship to an organization",
                            "title": "PersonEventContext",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "personalAddress": {
                                "type": "object",
                                "additionalProperties": false,
                                "title": "PersonalAddressEventContext",
                                "properties": {
                                  "itemID": {
                                    "description": "The unique identifier of the object in a collection",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "transform": {
                    "description": "Data which is transformed as a result of the event",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "eventReasonCode": {
                        "description": "This allows for further refinement of the associated event. For example, for a worker.maritalStatus.change event, the reason code could be used to describe whether it is a Marriage vs. Divorce vs. Separation",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "codeValue": {
                            "description": "The code for the related entity",
                            "type": "string"
                          },
                          "shortName": {
                            "description": "Short description of the related code",
                            "type": "string"
                          },
                          "longName": {
                            "description": "Long description of the related code",
                            "type": "string"
                          }
                        }
                      },
                      "eventStatusCode": {
                        "description": "This identifies the status of the event. An event that has been created, either by the system of record or as the result of a user, will have an event status code of Created. An event that is saved in a work in progress state (as determined by the permissable state codes), will have an event status code of InProgress. An event that has been recorded, will have an event status code of Complete. This value is set by the system of record",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "codeValue": {
                            "description": "The code for the related entity",
                            "type": "string"
                          },
                          "shortName": {
                            "description": "Short description of the related code",
                            "type": "string"
                          },
                          "longName": {
                            "description": "Long description of the related code",
                            "type": "string"
                          }
                        }
                      },
                      "effectiveDateTime": {
                        "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "notificationIndicator": {
                        "description": "Are we sending update emails as the advance is processed?",
                        "type": "boolean"
                      },
                      "worker": {
                        "description": "A worker is someone who performs duties and has responsibilities for an organization",
                        "title": "WorkerTransform",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "person": {
                            "description": "An associate is a person with a relationship to an organization",
                            "title": "PersonTransform",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "personalAddress": {
                                "description": "A residential address.  Could be the same as  primary residential address that  is used by an organization for payroll, taxation, and benefit program eligibility",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "scriptCode": {
                                    "description": "The type of script the in which the associated entity is represented. Associated codelist is ISO15924-A. Use the alpha-4 representation versus the single digit numeric representation. Format is lowercase with initial letter capitalized. For example, Cyrillic is Cyrl",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "lineFour": {
                                    "description": "Line Four of Street Address Information",
                                    "type": "string"
                                  },
                                  "lineFive": {
                                    "description": "Line Five of Street Address Information",
                                    "type": "string"
                                  },
                                  "buildingNumber": {
                                    "description": "The number of a building in the context of a physical address, e.g. House Number",
                                    "type": "string"
                                  },
                                  "buildingName": {
                                    "description": "The name of a building in the context of a physical address, e.g. Rockefeller Center",
                                    "type": "string"
                                  },
                                  "blockName": {
                                    "description": "The name the block",
                                    "type": "string"
                                  },
                                  "streetName": {
                                    "description": "The name of the street",
                                    "type": "string"
                                  },
                                  "streetTypeCode": {
                                    "description": "The type of street, e.g. Lane, Passage, Way",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "unit": {
                                    "description": "A unit in the context of an address, e.g. an Apartment Number or an Office",
                                    "type": "string"
                                  },
                                  "floor": {
                                    "description": "A floor in the context of an address",
                                    "type": "string"
                                  },
                                  "stairCase": {
                                    "description": "A reference to a particular staircase in the context of an address",
                                    "type": "string"
                                  },
                                  "door": {
                                    "description": "A reference to a particular door in the context of an address. e.g. Apartment Number",
                                    "type": "string"
                                  },
                                  "postOfficeBox": {
                                    "description": "A post office box",
                                    "type": "string"
                                  },
                                  "deliveryPoint": {
                                    "description": "A way to identify a specific delivery location, e.g. a mail-stop",
                                    "type": "string"
                                  },
                                  "plotID": {
                                    "description": "A way to identify a building plot, e.g. a specific building construction site",
                                    "type": "string"
                                  },
                                  "countrySubdivisionLevel2": {
                                    "description": "A country subdivision correlating to a administrative level two levels below country. For example, in the United States, this might be a county",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      },
                                      "subdivisionType": {
                                        "description": "The type of a country sub-division, e.g. state, county",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "nameCode": {
                                    "description": "A descriptive coded name of the address",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "attentionOfName": {
                                    "description": "Attention of Name",
                                    "type": "string"
                                  },
                                  "careOfName": {
                                    "description": "Care Of Name",
                                    "type": "string"
                                  },
                                  "lineOne": {
                                    "description": "Line One of Street Address Information",
                                    "type": "string"
                                  },
                                  "lineTwo": {
                                    "description": "Line Two of Street Address Information",
                                    "type": "string"
                                  },
                                  "lineThree": {
                                    "description": "Line Three of Street Address Information",
                                    "type": "string"
                                  },
                                  "cityName": {
                                    "description": "A city in the context of an address",
                                    "type": "string"
                                  },
                                  "countrySubdivisionLevel1": {
                                    "description": "A country subdivision correlating to a administrative level one level below country. For example, in the United States, this would be a state",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      },
                                      "subdivisionType": {
                                        "description": "The type of a country sub-division, e.g. state, county",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "countryCode": {
                                    "description": "A simple (string) code.  Can have a code list reference",
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "description": "The string of characters used to identify the postal code",
                                    "type": "string"
                                  },
                                  "geoCoordinate": {
                                    "description": "The coordinates of the location of the address",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "latitude": {
                                        "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
                                        "type": "number"
                                      },
                                      "longitude": {
                                        "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "sameAsAddressIndicator": {
                                    "description": "This indicator is used to support the ability to say that one address is the same as another. For example, the address of a dependent is the same as that of a worker. If a given system supports this functionality, this field should be present and set to true. The meta component associated to an event that allows for the adding or changing of an address, should use the links array associated to the indicator to define the list of addresses from which the user can select to set the address in context to be the same as.",
                                    "type": "boolean"
                                  },
                                  "sameAsAddressLink": {
                                    "description": "This link is used in conjunction with the sameAsAddressIndicator. If a given system support same as address functionality, this link will point to the address that a user has selected as being the same as the one in context. For example, if the address in context is a dependent address, and the user has indicated that the dependent address is the same as the legal address of the worker, this link would point to worker/id/person/legalAddress.",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "href": {
                                        "description": "The URI of the related entity",
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "rel": {
                                        "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                        "type": "string",
                                        "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                                      },
                                      "title": {
                                        "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                        "type": "string"
                                      },
                                      "targetSchema": {
                                        "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                        "type": "string"
                                      },
                                      "mediaType": {
                                        "description": "The media type that the linked resource will return (Response)",
                                        "type": "string",
                                        "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                                      },
                                      "method": {
                                        "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                        "type": "string",
                                        "enum": ["GET", "POST", "DELETE", "PUT"]
                                      },
                                      "encType": {
                                        "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                        "type": "string",
                                        "enum": ["application/json", "application/x-www-form-urlencoded"]
                                      },
                                      "schema": {
                                        "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                        "type": "string"
                                      },
                                      "payLoadArguments": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "argumentPath": {
                                              "description": "Code value (typically a key field) of the code list item",
                                              "type": "string"
                                            },
                                            "argumentValue": {
                                              "description": "Code value (typically a key field) of the code list item",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "attachments": {
                        "description": "The attachments related to the Worker Personal Address",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "PersonalAddressAttachmentTransform",
                          "additionalProperties": false,
                          "properties": {
                            "nameCode": {
                              "description": "A coded name or descriptive label of the associated entity. If this is a coded value, codeValue and shortName should be used. If this is just a string value, only shortName is necessary ",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "codeValue": {
                                  "description": "The code for the related entity",
                                  "type": "string"
                                },
                                "shortName": {
                                  "description": "Short description of the related code",
                                  "type": "string"
                                },
                                "longName": {
                                  "description": "Long description of the related code",
                                  "type": "string"
                                }
                              }
                            },
                            "attachmentLink": {
                              "description": "A link to the related attachment",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "href": {
                                  "description": "The URI of the related entity",
                                  "type": "string",
                                  "format": "uri"
                                },
                                "rel": {
                                  "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                  "type": "string",
                                  "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                                },
                                "title": {
                                  "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                  "type": "string"
                                },
                                "targetSchema": {
                                  "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                  "type": "string"
                                },
                                "mediaType": {
                                  "description": "The media type that the linked resource will return (Response)",
                                  "type": "string",
                                  "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                                },
                                "method": {
                                  "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                  "type": "string",
                                  "enum": ["GET", "POST", "DELETE", "PUT"]
                                },
                                "encType": {
                                  "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                  "type": "string",
                                  "enum": ["application/json", "application/x-www-form-urlencoded"]
                                },
                                "schema": {
                                  "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                  "type": "string"
                                },
                                "payLoadArguments": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "argumentPath": {
                                        "description": "Code value (typically a key field) of the code list item",
                                        "type": "string"
                                      },
                                      "argumentValue": {
                                        "description": "Code value (typically a key field) of the code list item",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "textValue": {
                              "description": "A text representation of the related attachment",
                              "type": "string"
                            },
                            "itemID": {
                              "description": "The unique identifier of the object in a collection",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "output": {
                    "description": "Result of the event",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "worker": {
                        "description": "A worker is someone who performs duties and has responsibilities for an organization",
                        "title": "WorkerOutput",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "associateOID": {
                            "description": "A unique identifier of an associate",
                            "type": "string"
                          },
                          "workerID": {
                            "description": "An identifier for a worker, e.g. an Employee ID",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "idValue": {
                                "description": "An actual ID value",
                                "type": "string"
                              },
                              "schemeCode": {
                                "description": "The scheme code",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "codeValue": {
                                    "description": "The code for the related entity",
                                    "type": "string"
                                  },
                                  "shortName": {
                                    "description": "Short description of the related code",
                                    "type": "string"
                                  },
                                  "longName": {
                                    "description": "Long description of the related code",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "person": {
                            "description": "An associate is a person with a relationship to an organization",
                            "title": "PersonOutput",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "personalAddress": {
                                "description": "This is the primary residential address that  is used by an organization for payroll, taxation, and benefit program eligibility",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "sameAsAddressIndicator": {
                                    "description": "This indicator is used to support the ability to say that one address is the same as another. For example, the address of a dependent is the same as that of a worker. If a given system supports this functionality, this field should be present and set to true. The meta component associated to an event that allows for the adding or changing of an address, should use the links array associated to the indicator to define the list of addresses from which the user can select to set the address in context to be the same as.",
                                    "type": "boolean"
                                  },
                                  "sameAsAddressLink": {
                                    "description": "This link is used in conjunction with the sameAsAddressIndicator. If a given system support same as address functionality, this link will point to the address that a user has selected as being the same as the one in context. For example, if the address in context is a dependent address, and the user has indicated that the dependent address is the same as the legal address of the worker, this link would point to worker/id/person/legalAddress.",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "href": {
                                        "description": "The URI of the related entity",
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "rel": {
                                        "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                        "type": "string",
                                        "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                                      },
                                      "title": {
                                        "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                        "type": "string"
                                      },
                                      "targetSchema": {
                                        "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                        "type": "string"
                                      },
                                      "mediaType": {
                                        "description": "The media type that the linked resource will return (Response)",
                                        "type": "string",
                                        "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                                      },
                                      "method": {
                                        "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                        "type": "string",
                                        "enum": ["GET", "POST", "DELETE", "PUT"]
                                      },
                                      "encType": {
                                        "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                        "type": "string",
                                        "enum": ["application/json", "application/x-www-form-urlencoded"]
                                      },
                                      "schema": {
                                        "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                        "type": "string"
                                      },
                                      "payLoadArguments": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "argumentPath": {
                                              "description": "Code value (typically a key field) of the code list item",
                                              "type": "string"
                                            },
                                            "argumentValue": {
                                              "description": "Code value (typically a key field) of the code list item",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "nameCode": {
                                    "description": "A descriptive coded name of the address",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "attentionOfName": {
                                    "description": "Attention of Name",
                                    "type": "string"
                                  },
                                  "careOfName": {
                                    "description": "Care Of Name",
                                    "type": "string"
                                  },
                                  "lineOne": {
                                    "description": "Line One of Street Address Information",
                                    "type": "string"
                                  },
                                  "lineTwo": {
                                    "description": "Line Two of Street Address Information",
                                    "type": "string"
                                  },
                                  "lineThree": {
                                    "description": "Line Three of Street Address Information",
                                    "type": "string"
                                  },
                                  "cityName": {
                                    "description": "A city in the context of an address",
                                    "type": "string"
                                  },
                                  "countrySubdivisionLevel1": {
                                    "description": "A country subdivision correlating to a administrative level one level below country. For example, in the United States, this would be a state",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      },
                                      "subdivisionType": {
                                        "description": "The type of a country sub-division, e.g. state, county",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "countryCode": {
                                    "description": "A simple (string) code.  Can have a code list reference",
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "description": "The string of characters used to identify the postal code",
                                    "type": "string"
                                  },
                                  "geoCoordinate": {
                                    "description": "The coordinates of the location of the address",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "latitude": {
                                        "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
                                        "type": "number"
                                      },
                                      "longitude": {
                                        "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "scriptCode": {
                                    "description": "The type of script the in which the associated entity is represented. Associated codelist is ISO15924-A. Use the alpha-4 representation versus the single digit numeric representation. Format is lowercase with initial letter capitalized. For example, Cyrillic is Cyrl",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "lineFour": {
                                    "description": "Line Four of Street Address Information",
                                    "type": "string"
                                  },
                                  "lineFive": {
                                    "description": "Line Five of Street Address Information",
                                    "type": "string"
                                  },
                                  "buildingNumber": {
                                    "description": "The number of a building in the context of a physical address, e.g. House Number",
                                    "type": "string"
                                  },
                                  "buildingName": {
                                    "description": "The name of a building in the context of a physical address, e.g. Rockefeller Center",
                                    "type": "string"
                                  },
                                  "blockName": {
                                    "description": "The name the block",
                                    "type": "string"
                                  },
                                  "streetName": {
                                    "description": "The name of the street",
                                    "type": "string"
                                  },
                                  "streetTypeCode": {
                                    "description": "The type of street, e.g. Lane, Passage, Way",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "unit": {
                                    "description": "A unit in the context of an address, e.g. an Apartment Number or an Office",
                                    "type": "string"
                                  },
                                  "floor": {
                                    "description": "A floor in the context of an address",
                                    "type": "string"
                                  },
                                  "stairCase": {
                                    "description": "A reference to a particular staircase in the context of an address",
                                    "type": "string"
                                  },
                                  "door": {
                                    "description": "A reference to a particular door in the context of an address. e.g. Apartment Number",
                                    "type": "string"
                                  },
                                  "postOfficeBox": {
                                    "description": "A post office box",
                                    "type": "string"
                                  },
                                  "deliveryPoint": {
                                    "description": "A way to identify a specific delivery location, e.g. a mail-stop",
                                    "type": "string"
                                  },
                                  "plotID": {
                                    "description": "A way to identify a building plot, e.g. a specific building construction site",
                                    "type": "string"
                                  },
                                  "countrySubdivisionLevel2": {
                                    "description": "A country subdivision correlating to a administrative level two levels below country. For example, in the United States, this might be a county",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      },
                                      "subdivisionType": {
                                        "description": "The type of a country sub-division, e.g. state, county",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "itemID": {
                                    "description": "The unique identifier of the object in a collection",
                                    "type": "string"
                                  },
                                  "typeCode": {
                                    "description": "The type of the related address entity",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "codeValue": {
                                        "description": "The code for the related entity",
                                        "type": "string"
                                      },
                                      "shortName": {
                                        "description": "Short description of the related code",
                                        "type": "string"
                                      },
                                      "longName": {
                                        "description": "Long description of the related code",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "attachments": {
                        "description": "The attachments related to the Worker Personal Address",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "PersonalAddressAttachmentOutput",
                          "additionalProperties": false,
                          "properties": {
                            "nameCode": {
                              "description": "A coded name or descriptive label of the associated entity. If this is a coded value, codeValue and shortName should be used. If this is just a string value, only shortName is necessary ",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "codeValue": {
                                  "description": "The code for the related entity",
                                  "type": "string"
                                },
                                "shortName": {
                                  "description": "Short description of the related code",
                                  "type": "string"
                                },
                                "longName": {
                                  "description": "Long description of the related code",
                                  "type": "string"
                                }
                              }
                            },
                            "attachmentLink": {
                              "description": "A link to the related attachment",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "href": {
                                  "description": "The URI of the related entity",
                                  "type": "string",
                                  "format": "uri"
                                },
                                "rel": {
                                  "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                  "type": "string",
                                  "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                                },
                                "title": {
                                  "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                  "type": "string"
                                },
                                "targetSchema": {
                                  "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                  "type": "string"
                                },
                                "mediaType": {
                                  "description": "The media type that the linked resource will return (Response)",
                                  "type": "string",
                                  "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                                },
                                "method": {
                                  "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                  "type": "string",
                                  "enum": ["GET", "POST", "DELETE", "PUT"]
                                },
                                "encType": {
                                  "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                  "type": "string",
                                  "enum": ["application/json", "application/x-www-form-urlencoded"]
                                },
                                "schema": {
                                  "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                  "type": "string"
                                },
                                "payLoadArguments": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "argumentPath": {
                                        "description": "Code value (typically a key field) of the code list item",
                                        "type": "string"
                                      },
                                      "argumentValue": {
                                        "description": "Code value (typically a key field) of the code list item",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "textValue": {
                              "description": "A text representation of the related attachment",
                              "type": "string"
                            },
                            "itemID": {
                              "description": "The unique identifier of the object in a collection",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "meta": {
          "description": "Meta contains the metadata associated with a response.  A GET response may include metadata to support pagination",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "startSequence": {
              "description": "The instance resource sequence (number) identifying the first resource returned in the response. The server generates this sequence.  It is used by the client to determine the start sequence of the subsequent Get request",
              "type": "integer"
            },
            "completeIndicator": {
              "description": "Indicates whether the response completes the return of all of the resources of the instance resource set to the requesting system",
              "type": "boolean"
            },
            "totalNumber": {
              "description": "Number of total instance resources in an instance resource set. Note: An instance resource set is a set of instance resources that is determined by a server to satisfy the sets membership criteria (i.e., selection, filter, expansion and search criteria) of a resource management operation (e.g. GET request) upon a collection resource",
              "type": "integer"
            },
            "resourceSetID": {
              "description": "Unique identifier of the instance resource set.  It is generated by the server as a result of the original Get request",
              "type": "string"
            },
            "links": {
              "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
              "type": "array",
              "items": {
                "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "description": "The URI of the related entity",
                    "type": "string",
                    "format": "uri"
                  },
                  "rel": {
                    "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                    "type": "string",
                    "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                  },
                  "title": {
                    "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                    "type": "string"
                  },
                  "targetSchema": {
                    "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                    "type": "string"
                  },
                  "mediaType": {
                    "description": "The media type that the linked resource will return (Response)",
                    "type": "string",
                    "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                  },
                  "method": {
                    "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                    "type": "string",
                    "enum": ["GET", "POST", "DELETE", "PUT"]
                  },
                  "encType": {
                    "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                    "type": "string",
                    "enum": ["application/json", "application/x-www-form-urlencoded"]
                  },
                  "schema": {
                    "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                    "type": "string"
                  },
                  "payLoadArguments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "argumentPath": {
                          "description": "Code value (typically a key field) of the code list item",
                          "type": "string"
                        },
                        "argumentValue": {
                          "description": "Code value (typically a key field) of the code list item",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "confirmMessage": {
          "description": "The ConfirmMessage contains the processing results for the corresponding request.  A request may have its processing reported as: succeeded, partially failed, or failed.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "confirmMessageID": {
              "description": "An identifier for the instance of the confirm message.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "idValue": {
                  "description": "An ID",
                  "type": "string"
                },
                "schemeName": {
                  "description": "The type of ID",
                  "type": "string"
                },
                "schemeAgencyName": {
                  "description": "The agency that issues the ID",
                  "type": "string"
                }
              }
            },
            "createDateTime": {
              "description": "The date & time that the message instance was generated.; follows the ISO-8601:2000 format: 2008-05-11T15:30:00-06:00.",
              "type": "string",
              "format": "date-time"
            },
            "requestReceiptDateTime": {
              "description": "The date & time that the request submitted by the client was received. Note, this timestamp may not be the same as the time the client actually submitted the request if there is a queuing mechanism between the client and server processing the request; it follows the ISO-8601:2000 format: 2008-05-11T15:30:00-06:00.",
              "type": "string",
              "format": "date-time"
            },
            "protocolStatusCode": {
              "description": "Protocol-specific response status code.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string"
                },
                "shortName": {
                  "description": "Short description of the related code not to exceed 25 characters",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                }
              }
            },
            "protocolCode": {
              "description": "Code that identifies the protocol used for the request.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string"
                },
                "shortName": {
                  "description": "Short description of the related code not to exceed 25 characters",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                }
              }
            },
            "requestID": {
              "description": "The identifier of the request that generated this response.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "idValue": {
                  "description": "An ID",
                  "type": "string"
                },
                "schemeName": {
                  "description": "The type of ID",
                  "type": "string"
                },
                "schemeAgencyName": {
                  "description": "The agency that issues the ID",
                  "type": "string"
                }
              }
            },
            "requestStatusCode": {
              "description": "The process results status code for the request.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "shortName": {
                  "description": "Short description of the related code",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                },
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string",
                  "enum": ["succeeded", "partiallyFailed", "failed"]
                }
              }
            },
            "requestMethodCode": {
              "description": "The method that was used on the request corresponding to this message instance.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "shortName": {
                  "description": "Short description of the related code",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                },
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string",
                  "enum": ["GET", "PUT", "POST", "PATCH", "DELETE"]
                }
              }
            },
            "sessionID": {
              "description": "A session identifier if one is available.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "idValue": {
                  "description": "An ID",
                  "type": "string"
                },
                "schemeName": {
                  "description": "The type of ID",
                  "type": "string"
                },
                "schemeAgencyName": {
                  "description": "The agency that issues the ID",
                  "type": "string"
                }
              }
            },
            "requestETag": {
              "description": "The entity tag of the entity in the request.",
              "type": "string"
            },
            "requestLink": {
              "description": "The link of the request that generated this response.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "href": {
                  "description": "The URI of the related entity",
                  "type": "string",
                  "format": "uri"
                },
                "rel": {
                  "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                  "type": "string",
                  "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                },
                "title": {
                  "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                  "type": "string"
                },
                "targetSchema": {
                  "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                  "type": "string"
                },
                "mediaType": {
                  "description": "The media type that the linked resource will return (Response)",
                  "type": "string",
                  "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                },
                "method": {
                  "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                  "type": "string",
                  "enum": ["GET", "POST", "DELETE", "PUT"]
                },
                "encType": {
                  "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                  "type": "string",
                  "enum": ["application/json", "application/x-www-form-urlencoded"]
                },
                "schema": {
                  "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                  "type": "string"
                },
                "payLoadArguments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "argumentPath": {
                        "description": "Code value (typically a key field) of the code list item",
                        "type": "string"
                      },
                      "argumentValue": {
                        "description": "Code value (typically a key field) of the code list item",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "processingStatusCode": {
              "description": "Processing status of the related request message.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "shortName": {
                  "description": "Short description of the related code",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                },
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string",
                  "enum": ["received", "validated", "started", "completed"]
                }
              }
            },
            "processMessages": {
              "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource. ",
              "type": "array",
              "items": {
                "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "processMessageID": {
                    "description": "An identifier for the instance of the process message.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "idValue": {
                        "description": "An ID",
                        "type": "string"
                      },
                      "schemeName": {
                        "description": "The type of ID",
                        "type": "string"
                      },
                      "schemeAgencyName": {
                        "description": "The agency that issues the ID",
                        "type": "string"
                      }
                    }
                  },
                  "messageTypeCode": {
                    "description": "Process Message instances may be of type: success, warning, error, or info.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "shortName": {
                        "description": "Short description of the related code",
                        "type": "string"
                      },
                      "longName": {
                        "description": "Long description of the related code",
                        "type": "string"
                      },
                      "codeValue": {
                        "description": "The code for the related entity.",
                        "type": "string",
                        "enum": ["success", "warning", "error", "info"]
                      }
                    }
                  },
                  "sourceLocationExpression": {
                    "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
                    "type": "string"
                  },
                  "expressionLanguageCode": {
                    "description": "Identifies the language used for expressions communicated in this message.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "shortName": {
                        "description": "Short description of the related code",
                        "type": "string"
                      },
                      "longName": {
                        "description": "Long description of the related code",
                        "type": "string"
                      },
                      "codeValue": {
                        "description": "The code for the related entity.",
                        "type": "string",
                        "enum": ["jPath"]
                      }
                    }
                  },
                  "links": {
                    "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                    "type": "array",
                    "items": {
                      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URI of the related entity",
                          "type": "string",
                          "format": "uri"
                        },
                        "rel": {
                          "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                          "type": "string",
                          "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                        },
                        "title": {
                          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                          "type": "string"
                        },
                        "targetSchema": {
                          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                          "type": "string"
                        },
                        "mediaType": {
                          "description": "The media type that the linked resource will return (Response)",
                          "type": "string",
                          "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                        },
                        "method": {
                          "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                          "type": "string",
                          "enum": ["GET", "POST", "DELETE", "PUT"]
                        },
                        "encType": {
                          "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                          "type": "string",
                          "enum": ["application/json", "application/x-www-form-urlencoded"]
                        },
                        "schema": {
                          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                          "type": "string"
                        },
                        "payLoadArguments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "argumentPath": {
                                "description": "Code value (typically a key field) of the code list item",
                                "type": "string"
                              },
                              "argumentValue": {
                                "description": "Code value (typically a key field) of the code list item",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "userMessage": {
                    "description": "Message returned to the user",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "codeValue": {
                        "description": "The code associated with the message description.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Title of the message description.",
                        "type": "string"
                      },
                      "messageTxt": {
                        "description": "The value/content of the message description.",
                        "type": "string"
                      },
                      "links": {
                        "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                        "type": "array",
                        "items": {
                          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URI of the related entity",
                              "type": "string",
                              "format": "uri"
                            },
                            "rel": {
                              "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                              "type": "string",
                              "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                            },
                            "title": {
                              "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                              "type": "string"
                            },
                            "targetSchema": {
                              "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                              "type": "string"
                            },
                            "mediaType": {
                              "description": "The media type that the linked resource will return (Response)",
                              "type": "string",
                              "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                            },
                            "method": {
                              "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                              "type": "string",
                              "enum": ["GET", "POST", "DELETE", "PUT"]
                            },
                            "encType": {
                              "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                              "type": "string",
                              "enum": ["application/json", "application/x-www-form-urlencoded"]
                            },
                            "schema": {
                              "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                              "type": "string"
                            },
                            "payLoadArguments": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "argumentPath": {
                                    "description": "Code value (typically a key field) of the code list item",
                                    "type": "string"
                                  },
                                  "argumentValue": {
                                    "description": "Code value (typically a key field) of the code list item",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "developerMessage": {
                    "description": "Message returned to the user",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "codeValue": {
                        "description": "The code associated with the message description.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Title of the message description.",
                        "type": "string"
                      },
                      "messageTxt": {
                        "description": "The value/content of the message description.",
                        "type": "string"
                      },
                      "links": {
                        "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                        "type": "array",
                        "items": {
                          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URI of the related entity",
                              "type": "string",
                              "format": "uri"
                            },
                            "rel": {
                              "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                              "type": "string",
                              "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                            },
                            "title": {
                              "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                              "type": "string"
                            },
                            "targetSchema": {
                              "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                              "type": "string"
                            },
                            "mediaType": {
                              "description": "The media type that the linked resource will return (Response)",
                              "type": "string",
                              "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                            },
                            "method": {
                              "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                              "type": "string",
                              "enum": ["GET", "POST", "DELETE", "PUT"]
                            },
                            "encType": {
                              "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                              "type": "string",
                              "enum": ["application/json", "application/x-www-form-urlencoded"]
                            },
                            "schema": {
                              "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                              "type": "string"
                            },
                            "payLoadArguments": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "argumentPath": {
                                    "description": "Code value (typically a key field) of the code list item",
                                    "type": "string"
                                  },
                                  "argumentValue": {
                                    "description": "Code value (typically a key field) of the code list item",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "resourceMessages": {
              "description": "resource Message contains the resource-specific processing results for resources being managed in the request.  A resource may have its processing reported as:  succeeded or failed.  It must be used to represent resource-specific messages.  In the case of a request managing multiple resources and resource-specific messages are to be returned, then this array will contain one object for each such resource of the request.",
              "type": "array",
              "items": {
                "description": "Each object contains detailed information for a resource referenced in the original request.",
                "type": "object",
                "required": true,
                "properties": {
                  "resourceMessageID": {
                    "description": "An identifier for the instance of the resource message.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "idValue": {
                        "description": "An ID",
                        "type": "string"
                      },
                      "schemeName": {
                        "description": "The type of ID",
                        "type": "string"
                      },
                      "schemeAgencyName": {
                        "description": "The agency that issues the ID",
                        "type": "string"
                      }
                    }
                  },
                  "resourceStatusCode": {
                    "description": "The processing results status code of the resource of the request.",
                    "type": "object",
                    "additionalProperties": false,
                    "title": "ResourceMessageResourceStatus",
                    "properties": {
                      "shortName": {
                        "description": "Short description of the related code",
                        "type": "string"
                      },
                      "longName": {
                        "description": "Long description of the related code",
                        "type": "string"
                      },
                      "codeValue": {
                        "description": "The code for the related entity.",
                        "type": "string",
                        "enum": ["succeeded", "failed", "warning"]
                      }
                    }
                  },
                  "resourceLink": {
                    "description": "The link of the request that generated this response.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "href": {
                        "description": "The URI of the related entity",
                        "type": "string",
                        "format": "uri"
                      },
                      "rel": {
                        "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                        "type": "string",
                        "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                      },
                      "title": {
                        "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                        "type": "string"
                      },
                      "targetSchema": {
                        "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                        "type": "string"
                      },
                      "mediaType": {
                        "description": "The media type that the linked resource will return (Response)",
                        "type": "string",
                        "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                      },
                      "method": {
                        "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                        "type": "string",
                        "enum": ["GET", "POST", "DELETE", "PUT"]
                      },
                      "encType": {
                        "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                        "type": "string",
                        "enum": ["application/json", "application/x-www-form-urlencoded"]
                      },
                      "schema": {
                        "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                        "type": "string"
                      },
                      "payLoadArguments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "argumentPath": {
                              "description": "Code value (typically a key field) of the code list item",
                              "type": "string"
                            },
                            "argumentValue": {
                              "description": "Code value (typically a key field) of the code list item",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "processMessages": {
                    "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource. ",
                    "type": "array",
                    "items": {
                      "title": "ProcessMessageWithResourceStatusCode",
                      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "processMessageID": {
                          "description": "An identifier for the instance of the process message.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "idValue": {
                              "description": "An ID",
                              "type": "string"
                            },
                            "schemeName": {
                              "description": "The type of ID",
                              "type": "string"
                            },
                            "schemeAgencyName": {
                              "description": "The agency that issues the ID",
                              "type": "string"
                            }
                          }
                        },
                        "messageTypeCode": {
                          "description": "Process Message instances may be of type: success, warning, error, or info.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "shortName": {
                              "description": "Short description of the related code",
                              "type": "string"
                            },
                            "longName": {
                              "description": "Long description of the related code",
                              "type": "string"
                            },
                            "codeValue": {
                              "description": "The code for the related entity.",
                              "type": "string",
                              "enum": ["success", "warning", "error", "info"]
                            }
                          }
                        },
                        "sourceLocationExpression": {
                          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
                          "type": "string"
                        },
                        "expressionLanguageCode": {
                          "description": "Identifies the language used for expressions communicated in this message.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "shortName": {
                              "description": "Short description of the related code",
                              "type": "string"
                            },
                            "longName": {
                              "description": "Long description of the related code",
                              "type": "string"
                            },
                            "codeValue": {
                              "description": "The code for the related entity.",
                              "type": "string",
                              "enum": ["jPath"]
                            }
                          }
                        },
                        "links": {
                          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                          "type": "array",
                          "items": {
                            "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "href": {
                                "description": "The URI of the related entity",
                                "type": "string",
                                "format": "uri"
                              },
                              "rel": {
                                "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                "type": "string",
                                "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                              },
                              "title": {
                                "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                "type": "string"
                              },
                              "targetSchema": {
                                "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                "type": "string"
                              },
                              "mediaType": {
                                "description": "The media type that the linked resource will return (Response)",
                                "type": "string",
                                "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                              },
                              "method": {
                                "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                "type": "string",
                                "enum": ["GET", "POST", "DELETE", "PUT"]
                              },
                              "encType": {
                                "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                "type": "string",
                                "enum": ["application/json", "application/x-www-form-urlencoded"]
                              },
                              "schema": {
                                "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                "type": "string"
                              },
                              "payLoadArguments": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "argumentPath": {
                                      "description": "Code value (typically a key field) of the code list item",
                                      "type": "string"
                                    },
                                    "argumentValue": {
                                      "description": "Code value (typically a key field) of the code list item",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "userMessage": {
                          "description": "Message returned to the user",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "codeValue": {
                              "description": "The code associated with the message description.",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the message description.",
                              "type": "string"
                            },
                            "messageTxt": {
                              "description": "The value/content of the message description.",
                              "type": "string"
                            },
                            "links": {
                              "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                              "type": "array",
                              "items": {
                                "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "href": {
                                    "description": "The URI of the related entity",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "rel": {
                                    "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                    "type": "string",
                                    "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                                  },
                                  "title": {
                                    "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                    "type": "string"
                                  },
                                  "targetSchema": {
                                    "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                    "type": "string"
                                  },
                                  "mediaType": {
                                    "description": "The media type that the linked resource will return (Response)",
                                    "type": "string",
                                    "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                                  },
                                  "method": {
                                    "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                    "type": "string",
                                    "enum": ["GET", "POST", "DELETE", "PUT"]
                                  },
                                  "encType": {
                                    "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                    "type": "string",
                                    "enum": ["application/json", "application/x-www-form-urlencoded"]
                                  },
                                  "schema": {
                                    "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                    "type": "string"
                                  },
                                  "payLoadArguments": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "argumentPath": {
                                          "description": "Code value (typically a key field) of the code list item",
                                          "type": "string"
                                        },
                                        "argumentValue": {
                                          "description": "Code value (typically a key field) of the code list item",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "developerMessage": {
                          "description": "Message returned to the user",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "codeValue": {
                              "description": "The code associated with the message description.",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the message description.",
                              "type": "string"
                            },
                            "messageTxt": {
                              "description": "The value/content of the message description.",
                              "type": "string"
                            },
                            "links": {
                              "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                              "type": "array",
                              "items": {
                                "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "href": {
                                    "description": "The URI of the related entity",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "rel": {
                                    "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                    "type": "string",
                                    "enum": ["alternate", "create", "canonical", "describedby", "edit-form", "enclosure", "full", "related", "root", "self", "up", "search", "first", "last", "next", "previous", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink", "/adp/validation"]
                                  },
                                  "title": {
                                    "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                    "type": "string"
                                  },
                                  "targetSchema": {
                                    "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                    "type": "string"
                                  },
                                  "mediaType": {
                                    "description": "The media type that the linked resource will return (Response)",
                                    "type": "string",
                                    "enum": ["application/gzip", "application/json", "application/msword", "application/pdf", "application/postscript", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/x-www-form-urlencoded", "image/gif", "image/jpeg", "image/png", "image/tiff", "multipart/mixed", "text/html", "text/plain", "application/vnd.visio", "image/bmp", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.ms-powerpoint", "video/mp4", "audio/mpeg", "video/x-msvideo", "video/x-ms-wmv", "application/rtf", "application/vnd.ms-outlook", "text/csv", "video/quicktime", "application/zip", "application/illustrator", "text/xml"]
                                  },
                                  "method": {
                                    "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                    "type": "string",
                                    "enum": ["GET", "POST", "DELETE", "PUT"]
                                  },
                                  "encType": {
                                    "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                    "type": "string",
                                    "enum": ["application/json", "application/x-www-form-urlencoded"]
                                  },
                                  "schema": {
                                    "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                    "type": "string"
                                  },
                                  "payLoadArguments": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "argumentPath": {
                                          "description": "Code value (typically a key field) of the code list item",
                                          "type": "string"
                                        },
                                        "argumentValue": {
                                          "description": "Code value (typically a key field) of the code list item",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "resourceStatusCode": {
                          "description": "DEPRECATED - Use messageTypeCode instead. The processing results status code of the resource of the request.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "codeValue": {
                              "description": "The code for the related entity.",
                              "type": "string"
                            },
                            "shortName": {
                              "description": "Short description of the related code not to exceed 25 characters",
                              "type": "string"
                            },
                            "longName": {
                              "description": "Long description of the related code",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfirmMessage": {
      "description": "The ConfirmMessage contains the processing results for the corresponding request.  A request may have its processing reported as: succeeded, partially failed, or failed.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "confirmMessage": {
          "description": "The ConfirmMessage contains the processing results for the corresponding request.  A request may have its processing reported as: succeeded, partially failed, or failed.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "confirmMessageID": {
              "description": "An identifier for the instance of the confirm message.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "idValue": {
                  "description": "An ID",
                  "type": "string"
                },
                "schemeName": {
                  "description": "The type of ID",
                  "type": "string"
                },
                "schemeAgencyName": {
                  "description": "The agency that issues the ID",
                  "type": "string"
                }
              }
            },
            "createDateTime": {
              "description": "The date & time that the message instance was generated.; follows the ISO-8601:2000 format: 2008-05-11T15:30:00-06:00.",
              "type": "string",
              "format": "date-time"
            },
            "requestReceiptDateTime": {
              "description": "The date & time that the request submitted by the client was received. Note, this timestamp may not be the same as the time the client actually submitted the request if there is a queuing mechanism between the client and server processing the request; it follows the ISO-8601:2000 format: 2008-05-11T15:30:00-06:00.",
              "type": "string",
              "format": "date-time"
            },
            "protocolStatusCode": {
              "description": "Protocol-specific response status code.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string"
                },
                "shortName": {
                  "description": "Short description of the related code not to exceed 25 characters",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                }
              }
            },
            "protocolCode": {
              "description": "Code that identifies the protocol used for the request.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string"
                },
                "shortName": {
                  "description": "Short description of the related code not to exceed 25 characters",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                }
              }
            },
            "requestID": {
              "description": "The identifier of the request that generated this response.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "idValue": {
                  "description": "An ID",
                  "type": "string"
                },
                "schemeName": {
                  "description": "The type of ID",
                  "type": "string"
                },
                "schemeAgencyName": {
                  "description": "The agency that issues the ID",
                  "type": "string"
                }
              }
            },
            "requestStatusCode": {
              "description": "The process results status code for the request.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "shortName": {
                  "description": "Short description of the related code",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                },
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string",
                  "enum": ["succeeded", "partiallyFailed", "failed"]
                }
              }
            },
            "requestMethodCode": {
              "description": "The method that was used on the request corresponding to this message instance.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "shortName": {
                  "description": "Short description of the related code",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                },
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string",
                  "enum": ["GET", "PUT", "POST", "PATCH", "DELETE"]
                }
              }
            },
            "sessionID": {
              "description": "A session identifier if one is available.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "idValue": {
                  "description": "An ID",
                  "type": "string"
                },
                "schemeName": {
                  "description": "The type of ID",
                  "type": "string"
                },
                "schemeAgencyName": {
                  "description": "The agency that issues the ID",
                  "type": "string"
                }
              }
            },
            "requestETag": {
              "description": "The entity tag of the entity in the request.",
              "type": "string"
            },
            "requestLink": {
              "description": "The link of the request that generated this response.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "href": {
                  "description": "The URI of the related entity",
                  "type": "string",
                  "format": "uri"
                },
                "rel": {
                  "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                  "type": "string",
                  "enum": ["alternate", "create", "canonical", "describedby", "enclosure", "full", "related", "root", "self", "up", "search", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink"]
                },
                "title": {
                  "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                  "type": "string"
                },
                "targetSchema": {
                  "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                  "type": "string"
                },
                "mediaType": {
                  "description": "The media type that the linked resource will return (Response)",
                  "type": "string",
                  "enum": ["application/json", "text/html", "application/pdf", "image/jpeg", "image/gif", "image/png", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
                },
                "method": {
                  "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                  "type": "string",
                  "enum": ["GET", "POST", "DELETE", "PUT"]
                },
                "encType": {
                  "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                  "type": "string",
                  "enum": ["application/json", "application/x-www-form-urlencoded"]
                },
                "schema": {
                  "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                  "type": "string"
                }
              }
            },
            "processingStatusCode": {
              "description": "Processing status of the related request message.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "shortName": {
                  "description": "Short description of the related code",
                  "type": "string"
                },
                "longName": {
                  "description": "Long description of the related code",
                  "type": "string"
                },
                "codeValue": {
                  "description": "The code for the related entity.",
                  "type": "string",
                  "enum": ["received", "validated", "completed"]
                }
              }
            },
            "processMessages": {
              "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource. ",
              "type": "array",
              "items": {
                "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "processMessageID": {
                    "description": "An identifier for the instance of the process message.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "idValue": {
                        "description": "An ID",
                        "type": "string"
                      },
                      "schemeName": {
                        "description": "The type of ID",
                        "type": "string"
                      },
                      "schemeAgencyName": {
                        "description": "The agency that issues the ID",
                        "type": "string"
                      }
                    }
                  },
                  "messageTypeCode": {
                    "description": "Process Message instances may be of type: success, warning, error, or info.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "shortName": {
                        "description": "Short description of the related code",
                        "type": "string"
                      },
                      "longName": {
                        "description": "Long description of the related code",
                        "type": "string"
                      },
                      "codeValue": {
                        "description": "The code for the related entity.",
                        "type": "string",
                        "enum": ["success", "warning", "error", "info"]
                      }
                    }
                  },
                  "sourceLocationExpression": {
                    "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
                    "type": "string"
                  },
                  "expressionLanguageCode": {
                    "description": "Identifies the language used for expressions communicated in this message.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "shortName": {
                        "description": "Short description of the related code",
                        "type": "string"
                      },
                      "longName": {
                        "description": "Long description of the related code",
                        "type": "string"
                      },
                      "codeValue": {
                        "description": "The code for the related entity.",
                        "type": "string",
                        "enum": ["jPath"]
                      }
                    }
                  },
                  "links": {
                    "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                    "type": "array",
                    "items": {
                      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URI of the related entity",
                          "type": "string",
                          "format": "uri"
                        },
                        "rel": {
                          "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                          "type": "string",
                          "enum": ["alternate", "create", "canonical", "describedby", "enclosure", "full", "related", "root", "self", "up", "search", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink"]
                        },
                        "title": {
                          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                          "type": "string"
                        },
                        "targetSchema": {
                          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                          "type": "string"
                        },
                        "mediaType": {
                          "description": "The media type that the linked resource will return (Response)",
                          "type": "string",
                          "enum": ["application/json", "text/html", "application/pdf", "image/jpeg", "image/gif", "image/png", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
                        },
                        "method": {
                          "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                          "type": "string",
                          "enum": ["GET", "POST", "DELETE", "PUT"]
                        },
                        "encType": {
                          "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                          "type": "string",
                          "enum": ["application/json", "application/x-www-form-urlencoded"]
                        },
                        "schema": {
                          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "userMessage": {
                    "description": "Message returned to the user",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "codeValue": {
                        "description": "The code associated with the message description.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Title of the message description.",
                        "type": "string"
                      },
                      "messageTxt": {
                        "description": "The value/content of the message description.",
                        "type": "string"
                      },
                      "links": {
                        "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                        "type": "array",
                        "items": {
                          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URI of the related entity",
                              "type": "string",
                              "format": "uri"
                            },
                            "rel": {
                              "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                              "type": "string",
                              "enum": ["alternate", "create", "canonical", "describedby", "enclosure", "full", "related", "root", "self", "up", "search", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink"]
                            },
                            "title": {
                              "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                              "type": "string"
                            },
                            "targetSchema": {
                              "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                              "type": "string"
                            },
                            "mediaType": {
                              "description": "The media type that the linked resource will return (Response)",
                              "type": "string",
                              "enum": ["application/json", "text/html", "application/pdf", "image/jpeg", "image/gif", "image/png", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
                            },
                            "method": {
                              "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                              "type": "string",
                              "enum": ["GET", "POST", "DELETE", "PUT"]
                            },
                            "encType": {
                              "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                              "type": "string",
                              "enum": ["application/json", "application/x-www-form-urlencoded"]
                            },
                            "schema": {
                              "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "developerMessage": {
                    "description": "Message returned to the user",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "codeValue": {
                        "description": "The code associated with the message description.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Title of the message description.",
                        "type": "string"
                      },
                      "messageTxt": {
                        "description": "The value/content of the message description.",
                        "type": "string"
                      },
                      "links": {
                        "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                        "type": "array",
                        "items": {
                          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URI of the related entity",
                              "type": "string",
                              "format": "uri"
                            },
                            "rel": {
                              "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                              "type": "string",
                              "enum": ["alternate", "create", "canonical", "describedby", "enclosure", "full", "related", "root", "self", "up", "search", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink"]
                            },
                            "title": {
                              "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                              "type": "string"
                            },
                            "targetSchema": {
                              "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                              "type": "string"
                            },
                            "mediaType": {
                              "description": "The media type that the linked resource will return (Response)",
                              "type": "string",
                              "enum": ["application/json", "text/html", "application/pdf", "image/jpeg", "image/gif", "image/png", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
                            },
                            "method": {
                              "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                              "type": "string",
                              "enum": ["GET", "POST", "DELETE", "PUT"]
                            },
                            "encType": {
                              "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                              "type": "string",
                              "enum": ["application/json", "application/x-www-form-urlencoded"]
                            },
                            "schema": {
                              "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "resourceMessages": {
              "description": "resource Message contains the resource-specific processing results for resources being managed in the request.  A resource may have its processing reported as:  succeeded or failed.  It must be used to represent resource-specific messages.  In the case of a request managing multiple resources and resource-specific messages are to be returned, then this array will contain one object for each such resource of the request.",
              "type": "array",
              "items": {
                "description": "Each object contains detailed information for a resource referenced in the original request.",
                "type": "object",
                "required": true,
                "properties": {
                  "resourceMessageID": {
                    "description": "An identifier for the instance of the resource message.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "idValue": {
                        "description": "An ID",
                        "type": "string"
                      },
                      "schemeName": {
                        "description": "The type of ID",
                        "type": "string"
                      },
                      "schemeAgencyName": {
                        "description": "The agency that issues the ID",
                        "type": "string"
                      }
                    }
                  },
                  "resourceStatusCode": {
                    "description": "The processing results status code of the resource of the request.",
                    "type": "object",
                    "additionalProperties": false,
                    "title": "ResourceMessageResourceStatus",
                    "properties": {
                      "shortName": {
                        "description": "Short description of the related code",
                        "type": "string"
                      },
                      "longName": {
                        "description": "Long description of the related code",
                        "type": "string"
                      },
                      "codeValue": {
                        "description": "The code for the related entity.",
                        "type": "string",
                        "enum": ["succeeded", "failed", "warning"]
                      }
                    }
                  },
                  "resourceLink": {
                    "description": "The link of the request that generated this response.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "href": {
                        "description": "The URI of the related entity",
                        "type": "string",
                        "format": "uri"
                      },
                      "rel": {
                        "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                        "type": "string",
                        "enum": ["alternate", "create", "canonical", "describedby", "enclosure", "full", "related", "root", "self", "up", "search", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink"]
                      },
                      "title": {
                        "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                        "type": "string"
                      },
                      "targetSchema": {
                        "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                        "type": "string"
                      },
                      "mediaType": {
                        "description": "The media type that the linked resource will return (Response)",
                        "type": "string",
                        "enum": ["application/json", "text/html", "application/pdf", "image/jpeg", "image/gif", "image/png", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
                      },
                      "method": {
                        "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                        "type": "string",
                        "enum": ["GET", "POST", "DELETE", "PUT"]
                      },
                      "encType": {
                        "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                        "type": "string",
                        "enum": ["application/json", "application/x-www-form-urlencoded"]
                      },
                      "schema": {
                        "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                        "type": "string"
                      }
                    }
                  },
                  "processMessages": {
                    "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource. ",
                    "type": "array",
                    "items": {
                      "title": "ProcessMessageWithResourceStatusCode",
                      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "processMessageID": {
                          "description": "An identifier for the instance of the process message.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "idValue": {
                              "description": "An ID",
                              "type": "string"
                            },
                            "schemeName": {
                              "description": "The type of ID",
                              "type": "string"
                            },
                            "schemeAgencyName": {
                              "description": "The agency that issues the ID",
                              "type": "string"
                            }
                          }
                        },
                        "messageTypeCode": {
                          "description": "Process Message instances may be of type: success, warning, error, or info.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "shortName": {
                              "description": "Short description of the related code",
                              "type": "string"
                            },
                            "longName": {
                              "description": "Long description of the related code",
                              "type": "string"
                            },
                            "codeValue": {
                              "description": "The code for the related entity.",
                              "type": "string",
                              "enum": ["success", "warning", "error", "info"]
                            }
                          }
                        },
                        "sourceLocationExpression": {
                          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
                          "type": "string"
                        },
                        "expressionLanguageCode": {
                          "description": "Identifies the language used for expressions communicated in this message.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "shortName": {
                              "description": "Short description of the related code",
                              "type": "string"
                            },
                            "longName": {
                              "description": "Long description of the related code",
                              "type": "string"
                            },
                            "codeValue": {
                              "description": "The code for the related entity.",
                              "type": "string",
                              "enum": ["jPath"]
                            }
                          }
                        },
                        "links": {
                          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                          "type": "array",
                          "items": {
                            "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "href": {
                                "description": "The URI of the related entity",
                                "type": "string",
                                "format": "uri"
                              },
                              "rel": {
                                "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                "type": "string",
                                "enum": ["alternate", "create", "canonical", "describedby", "enclosure", "full", "related", "root", "self", "up", "search", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink"]
                              },
                              "title": {
                                "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                "type": "string"
                              },
                              "targetSchema": {
                                "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                "type": "string"
                              },
                              "mediaType": {
                                "description": "The media type that the linked resource will return (Response)",
                                "type": "string",
                                "enum": ["application/json", "text/html", "application/pdf", "image/jpeg", "image/gif", "image/png", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
                              },
                              "method": {
                                "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                "type": "string",
                                "enum": ["GET", "POST", "DELETE", "PUT"]
                              },
                              "encType": {
                                "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                "type": "string",
                                "enum": ["application/json", "application/x-www-form-urlencoded"]
                              },
                              "schema": {
                                "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "userMessage": {
                          "description": "Message returned to the user",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "codeValue": {
                              "description": "The code associated with the message description.",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the message description.",
                              "type": "string"
                            },
                            "messageTxt": {
                              "description": "The value/content of the message description.",
                              "type": "string"
                            },
                            "links": {
                              "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                              "type": "array",
                              "items": {
                                "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "href": {
                                    "description": "The URI of the related entity",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "rel": {
                                    "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                    "type": "string",
                                    "enum": ["alternate", "create", "canonical", "describedby", "enclosure", "full", "related", "root", "self", "up", "search", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink"]
                                  },
                                  "title": {
                                    "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                    "type": "string"
                                  },
                                  "targetSchema": {
                                    "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                    "type": "string"
                                  },
                                  "mediaType": {
                                    "description": "The media type that the linked resource will return (Response)",
                                    "type": "string",
                                    "enum": ["application/json", "text/html", "application/pdf", "image/jpeg", "image/gif", "image/png", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
                                  },
                                  "method": {
                                    "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                    "type": "string",
                                    "enum": ["GET", "POST", "DELETE", "PUT"]
                                  },
                                  "encType": {
                                    "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                    "type": "string",
                                    "enum": ["application/json", "application/x-www-form-urlencoded"]
                                  },
                                  "schema": {
                                    "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "developerMessage": {
                          "description": "Message returned to the user",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "codeValue": {
                              "description": "The code associated with the message description.",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the message description.",
                              "type": "string"
                            },
                            "messageTxt": {
                              "description": "The value/content of the message description.",
                              "type": "string"
                            },
                            "links": {
                              "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                              "type": "array",
                              "items": {
                                "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "href": {
                                    "description": "The URI of the related entity",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "rel": {
                                    "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
                                    "type": "string",
                                    "enum": ["alternate", "create", "canonical", "describedby", "enclosure", "full", "related", "root", "self", "up", "search", "/adp/invoke", "/adp/image", "/adp/confirm-message", "/adp/status-monitor", "/adp/codelist", "/adp/template", "/adp/externalLink"]
                                  },
                                  "title": {
                                    "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
                                    "type": "string"
                                  },
                                  "targetSchema": {
                                    "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
                                    "type": "string"
                                  },
                                  "mediaType": {
                                    "description": "The media type that the linked resource will return (Response)",
                                    "type": "string",
                                    "enum": ["application/json", "text/html", "application/pdf", "image/jpeg", "image/gif", "image/png", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
                                  },
                                  "method": {
                                    "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
                                    "type": "string",
                                    "enum": ["GET", "POST", "DELETE", "PUT"]
                                  },
                                  "encType": {
                                    "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
                                    "type": "string",
                                    "enum": ["application/json", "application/x-www-form-urlencoded"]
                                  },
                                  "schema": {
                                    "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "resourceStatusCode": {
                          "description": "DEPRECATED - Use messageTypeCode instead. The processing results status code of the resource of the request.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "codeValue": {
                              "description": "The code for the related entity.",
                              "type": "string"
                            },
                            "shortName": {
                              "description": "Short description of the related code not to exceed 25 characters",
                              "type": "string"
                            },
                            "longName": {
                              "description": "Long description of the related code",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}